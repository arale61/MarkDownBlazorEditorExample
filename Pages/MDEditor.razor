@using BlazorApp.Data
@using Markdig

<div class="container-fluid border border-bottom-0">
<br />
@foreach(var block in GetBlocks())
{
    if(currentBlockIndex == block.Position)
    {
        <MDEdit Block="@block" MDBlockEdited="BlockEdited" />
    }
    else
    {
        <MDViewer Block="@block" BlockSelected="NewBlockSelected" MDPipeline="@pipeline" />
    }
}
</div>


@code {
    
    [Parameter]
    public EventCallback<MDBlockModel> MDMarkdownChangedNotification { get; set; }

    [Parameter]
    public MDBlockModel Model { get;set; }


    private MarkdownPipeline pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().Build();
    private List<MDBlock> GetBlocks() 
    {
        return Model
            .GetBlocks()
            .Where((b)=>!string.IsNullOrWhiteSpace(b.Content.Trim('\r','\n')) || b.Position == currentBlockIndex)
            .ToList();
    }

    private void NewBlockSelected(int blockNumber)
    {
        currentBlockIndex = blockNumber;
        Model.CleanAllEmptyBlocks();
        MDMarkdownChangedNotification.InvokeAsync(Model);
    }

    private int currentBlockIndex = -1;

    private void BlockEdited(MDBlock block)
    {
        if (Model.HandleBlockEdited(block))
        {
            currentBlockIndex = block.Position + 1;
        }
        else if(Model.GetBlocks().Count() == 1 && string.IsNullOrEmpty(block.Content.Trim('\r','\n')))
        {
            block.Content = block.Content.Trim('\r','\n');
            currentBlockIndex = block.Position;
        }
        else
        {
            currentBlockIndex = -1;
        }

        MDMarkdownChangedNotification.InvokeAsync(Model);
    }
}